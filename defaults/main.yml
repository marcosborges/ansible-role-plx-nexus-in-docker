---
nexus_os_group: 'nexus'
nexus_os_user: 'nexus'

nexus_backup_dir: '/opt/nexus-backup'

nexus_default_port: 8081
nexus_default_context_path: '/'

nexus_docker_hosted_port: 9080
nexus_docker_proxy_port: 9081
nexus_docker_group_port: 9082

nexus_admin_password: '123456'

nexus_anonymous_access: false
public_hostname: 'nexus.vm'

nexus_branding_header: ""
nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"

httpd_setup_enable: false
httpd_ssl_certificate_file: 'files/nexus.vm.crt'
httpd_ssl_certificate_key_file: 'files/nexus.vm.key'

# http proxy
nexus_with_http_proxy: false
nexus_http_proxy_host: "proxy.example.com"
nexus_http_proxy_port: 8080
nexus_http_proxy_username: ""
nexus_http_proxy_password: ""
nexus_with_https_proxy: false
nexus_https_proxy_host: "proxy.example.com"
nexus_https_proxy_port: 8080
nexus_https_proxy_username: ""
nexus_https_proxy_password: ""
nexus_proxy_exclude_hosts:
  - "localhost"
  - "127.*"
  - "[::1]"

nexus_config_pypi: true
nexus_config_docker: true
nexus_config_raw: true
nexus_config_rubygems: true
nexus_config_bower: true
nexus_config_npm: true
nexus_config_gitlfs: true
nexus_config_composer: true
nexus_config_nuget: true

# also see _nexus_privilege_defaults below
nexus_privileges:
  - name: all-repos-read # used as key to update a privilege
    description: 'Read & Browse access to all repos'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: Developpers # can map to a LDAP group id, also used as a key to update a role
    name: developers
    description: All developers
    privileges:
      - nx-search-read
      - all-repos-read
    roles: []

nexus_local_users:
  - username: jenkins # used as key to update
    first_name: Jenkins
    last_name: CI
    email: support@company.com
    password: "s3cr3t"
    roles:
      - developers

nexus_delete_default_repos: false
nexus_delete_default_blobstore: false

#
# Nexus blobstore config
nexus_blob_split: false     # True - blobstores per format
nexus_blob_names:           # Splited blob name list @ blob_vars.yml
  pypi:
    blob: 'pypi'
  raw:
    blob: 'raw'
  docker:
    blob: 'docker'
  ruby:
    blob: 'ruby'
  bower:
    blob: 'bower'
  npm:
    blob: 'npm'
  mvn:
    blob: 'mvn'
  gitlfs:
    blob: 'gitlfs'
  composer:
    blob: 'composer'
  nuget:
    blob: 'nuget'

nexus_data_dir : /opt/sonatype/sonatype-work/nexus3/blobs

nexus_blobstores:
 - name: pypi
   path: "{{ nexus_data_dir }}/pypi"
 - name: raw
   path: "{{ nexus_data_dir }}/raw"
 - name: docker
   path: "{{ nexus_data_dir }}/docker"
 - name: ruby
   path: "{{ nexus_data_dir }}/ruby"
 - name: bower
   path: "{{ nexus_data_dir }}/bower"
 - name: npm
   path: "{{ nexus_data_dir }}/npm"
 - name: mvn
   path: "{{ nexus_data_dir }}/mvn"
 - name: gitlfs
   path: "{{ nexus_data_dir }}/gitlfs"
 - name: composer
   path: "{{ nexus_data_dir }}/composer"
 - name: nuget
   path: "{{ nexus_data_dir }}/nuget"


# also see _nexus_repos_maven_defaults below
nexus_repos_maven_proxy:
  - name: maven-central-proxy
    remote_url: 'https://repo1.maven.org/maven2/'
    layout_policy: permissive
  - name: maven-jboss-proxy
    remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'

# example with a login/password :
# - name: secret-remote-repo
#   remote_url: 'https://company.com/repo/secure/private/go/away'
#   remote_username: 'username'
#   remote_password: 'secret'

nexus_repos_maven_hosted:
  - name: maven-hosted
    version_policy: mixed
    write_policy: allow_once

nexus_repos_maven_group:
  - name: maven-all
    member_repos:
      - maven-central-proxy
      - maven-jboss-proxy
      - maven-hosted
      
#nexus_scheduled_tasks:
#  - name: db-backup # Note: CRON must be aligned to nexus-blob-backup.sh cron schedule. -> Task: "Config nexus-backup shell cron"
#    cron: '0 0 21 * * ?'
#    typeId: db.backup
#    taskProperties:
#      location: "{{ nexus_backup_dir }}/"


#  example task to compact blobstore :
#  - name: compact-blobstore
#    cron: '0 0 22 * * ?'
#    typeId: blobstore.compact
#    taskProperties:
#      blobstoreName: 'default' # all task attributes are stored as strings by nexus internally

_nexus_privilege_defaults:
  type: repository-view
  format: maven2
  actions:
    - read


_nexus_repos_maven_defaults:
  blob_store: "{{ nexus_blob_names.mvn.blob }}"
  strict_content_validation: true
  version_policy: mixed # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow



# pypi support ...
_nexus_repos_pypi_defaults:
  blob_store: "{{ nexus_blob_names.pypi.blob }}"
  strict_content_validation: true
  version_policy: mixed # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow
nexus_repos_pypi_hosted:
  - name: pypi-hosted
    version_policy: release
    write_policy: allow
nexus_repos_pypi_group:
  - name: pypi-all
    member_repos:
      - pypi-hosted
      - pypi-proxy
nexus_repos_pypi_proxy:
  - name: pypi-proxy
    remote_url: 'https://pypi.python.org/'


# nuget support ...
_nexus_repos_nuget_defaults:
  blob_store: "{{ nexus_blob_names.nuget.blob }}"
  strict_content_validation: true
  version_policy: mixed # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow
nexus_repos_nuget_hosted:
  - name: nuget-hosted
    version_policy: release
    write_policy: allow
nexus_repos_nuget_proxy:
  - name: nuget-proxy
    remote_url: 'https://www.nuget.org/api/v2/'
nexus_repos_nuget_group:
  - name: nuget-all
    member_repos:
      - nuget-hosted
      - nuget-proxy


# raw repo support
_nexus_repos_raw_defaults:
  blob_store: "{{ nexus_blob_names.raw.blob }}"
  strict_content_validation: true
  version_policy: mixed # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow
nexus_repos_raw_proxy:
  - name: raw-ubuntu-proxy
    remote_url: 'http://archive.ubuntu.com/ubuntu/'
nexus_repos_raw_hosted:
  - name: raw-hosted
    version_policy: release
    write_policy: allow_once
nexus_repos_raw_group:
  - name: raw-all
    member_repos:
      - raw-hosted
      - raw-ubuntu-proxy


# Docker support
_nexus_repos_docker_defaults:
  blob_store: "{{ nexus_blob_names.docker.blob }}"
  strict_content_validation: true
  version_policy: mixed # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow # allow_once or allow
nexus_repos_docker_hosted:
  - name: docker-prd-hosted
    http_port: "9030"
    https_port: "9031"
    v1_enabled: True
  - name: docker-dev-hosted
    http_port: "9020"
    https_port: "9021"
    v1_enabled: True
nexus_repos_docker_proxy:
  - name: docker-proxy
    http_port: "9010"
    https_port: "9011"
    v1_enabled: True
    index_type: "HUB"
    proxy_url: "https://registry-1.docker.io"
    use_nexus_certificates_to_access_index: false
nexus_repos_docker_group:
  - name: docker-all
    http_port: "9000"
    https_port: "9001"
    v1_enabled: True
    member_repos:
      - docker-dev-hosted
      - docker-prd-hosted
      - docker-proxy


# RubyGems support
_nexus_repos_rubygems_defaults:
  blob_store: "{{ nexus_blob_names.ruby.blob }}"
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow
nexus_repos_rubygems_hosted:
  - name: rubygems-hosted
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
nexus_repos_rubygems_proxy:
  - name: rubygems-proxy
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    remote_url: https://rubygems.org
nexus_repos_rubygems_group:
  - name: rubygems-all
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    member_repos:
      - rubygems-hosted
      - rubygems-proxy


# Composer support
_nexus_repos_composer_defaults:
  blob_store: "{{ nexus_blob_names.composer.blob }}"
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow
nexus_repos_composer_hosted:
  - name: composer-hosted
    blob_store: "{{ nexus_blob_names.composer.blob }}"
nexus_repos_composer_proxy:
  - name: composer-proxy
    blob_store: "{{ nexus_blob_names.composer.blob }}"
    remote_url: https://packagist.org
nexus_repos_composer_group:
  - name: composer-all
    blob_store: "{{ nexus_blob_names.composer.blob }}"
    member_repos:
      - composer-hosted
      - composer-proxy


# Bower support
_nexus_repos_bower_defaults:
  blob_store: "{{ nexus_blob_names.bower.blob }}"
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow
nexus_repos_bower_hosted:
  - name: bower-hosted
    blob_store: "{{ nexus_blob_names.bower.blob }}"
nexus_repos_bower_proxy:
  - name: bower-proxy
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    remote_url: http://bower.herokuapp.com
nexus_repos_bower_group:
  - name: bower-all
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    member_repos:
      - bower-hosted
      - bower-proxy


# npm support
_nexus_repos_npm_defaults:
  blob_store: "{{ nexus_blob_names.npm.blob }}"
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow
nexus_repos_npm_hosted:
  - name: npm-hosted
    blob_store: "{{ nexus_blob_names.npm.blob }}"
nexus_repos_npm_proxy:
  - name: npm-proxy
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    remote_url: https://registry.npmjs.org
nexus_repos_npm_group:
  - name: npm-all
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    member_repos:
      - npm-hosted
      - npm-proxy

# gitlfs support
_nexus_repos_gitlfs_defaults:
  blob_store: "{{ nexus_blob_names.gitlfs.blob }}"
  strict_content_validation: true
  write_policy: allow  # allow_once or allow
nexus_repos_gitlfs_hosted:
  - name: gitlfs-hosted
    blob_store: "{{ nexus_blob_names.gitlfs.blob }}"